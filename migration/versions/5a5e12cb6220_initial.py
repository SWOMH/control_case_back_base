"""initial

Revision ID: 5a5e12cb6220
Revises: 
Create Date: 2025-09-09 20:06:29.972934

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5a5e12cb6220'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('discount',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('discount_type', sa.String(), nullable=False),
    sa.Column('discount_amount', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('date_create', sa.Date(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index('ix_discount_date_create', 'discount', ['date_create'], unique=False, schema='public')
    op.create_index('ix_discount_type', 'discount', ['discount_type'], unique=False, schema='public')
    op.create_table('documents',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('document_name', sa.String(), nullable=False),
    sa.Column('document_description', sa.String(), nullable=True),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('instruction', sa.String(), nullable=True),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('sale', sa.Boolean(), nullable=False),
    sa.Column('limit_free', sa.Integer(), nullable=True),
    sa.Column('activity', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('groups',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('link', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('operation_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(length=64), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('direction', postgresql.ENUM('CREDIT', 'DEBIT', name='transaction_direction_enum'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    schema='public'
    )
    op.create_table('reason_close_chat',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('reason', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('support_history_date',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date_join', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_leave', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('login', sa.String(), nullable=False),
    sa.Column('email', sa.String(length=254), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('surname', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('patronymic', sa.String(), nullable=False),
    sa.Column('is_client', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('curt_href', sa.String(), nullable=True),
    sa.Column('is_banned', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('account_confirmed', sa.Boolean(), nullable=False),
    sa.Column('last_activity', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('locale', sa.String(length=10), nullable=True),
    sa.Column('timezone', sa.String(length=64), nullable=True),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    schema='public'
    )
    op.create_table('group_permission_association',
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('permission', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['public.groups.id'], ondelete='CASCADE')
    )
    op.create_table('agreements_clients',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date_conclusion', sa.Date(), nullable=False),
    sa.Column('expected_completion_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('price', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('discount_amount', sa.Numeric(precision=18, scale=2), nullable=True),
    sa.Column('price_after_discount', sa.Numeric(precision=18, scale=2), nullable=True),
    sa.Column('number_of_payments', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index('ix_agreements_clients_date_conclusion', 'agreements_clients', ['date_conclusion'], unique=False, schema='public')
    op.create_index('ix_agreements_clients_user_id', 'agreements_clients', ['user_id'], unique=False, schema='public')
    op.create_table('balance_operation',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('operation_type_id', sa.Integer(), nullable=False),
    sa.Column('direction', postgresql.ENUM('CREDIT', 'DEBIT', name='transaction_direction_enum'), nullable=False),
    sa.Column('amount', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('balance_after', sa.Numeric(precision=18, scale=2), nullable=True),
    sa.Column('status', postgresql.ENUM('PENDING', 'COMPLETED', 'FAILED', 'REFUNDED', name='transaction_status_enum'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('reference_type', sa.String(length=64), nullable=True),
    sa.Column('reference_id', sa.String(length=255), nullable=True),
    sa.Column('idempotency_key', sa.String(length=255), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('metadata_json', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['operation_type_id'], ['public.operation_type.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index('ix_balance_operation_external_id', 'balance_operation', ['external_id'], unique=False, schema='public')
    op.create_index('ix_balance_operation_user_id_created_at', 'balance_operation', ['user_id', 'created_at'], unique=False, schema='public')
    op.create_table('chats',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('user_support_id', sa.Integer(), nullable=True),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('resolved', sa.Boolean(), nullable=False),
    sa.Column('date_close', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ),
    sa.ForeignKeyConstraint(['user_support_id'], ['public.users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('client_lawyer_assignment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('lawyer_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('unassigned_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['public.users.id'], ),
    sa.ForeignKeyConstraint(['lawyer_id'], ['public.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('court_stage',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('stage_name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('date_stage', sa.DateTime(), nullable=False),
    sa.Column('appointed', sa.String(), nullable=True),
    sa.Column('automatically', sa.Boolean(), nullable=False),
    sa.Column('appointed_employee', sa.String(), nullable=False),
    sa.Column('appointed_employee_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['appointed_employee_id'], ['public.users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('document_created',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created', sa.Boolean(), nullable=False),
    sa.Column('date', sa.Date(), server_default=sa.text('CURRENT_DATE'), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['public.documents.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('document_fields',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('field_name', sa.String(), nullable=False),
    sa.Column('field_type', postgresql.ENUM('INTEGER', 'FLOAT', 'STRING', 'DATE', 'DATETIME', 'UNDEFINED', name='document_fields_type_enum'), nullable=False),
    sa.Column('field_description', sa.String(), nullable=True),
    sa.Column('field_example', sa.String(), nullable=True),
    sa.Column('service_field', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['public.documents.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('documents_user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('created_count', sa.Integer(), nullable=False),
    sa.Column('created_limit', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['public.documents.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('payments_requests',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('orderId', sa.String(length=255), nullable=False),
    sa.Column('amount', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('status', postgresql.ENUM('PENDING', 'COMPLETED', 'FAILED', 'REFUNDED', name='transaction_status_enum'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('form_url', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('orderId'),
    schema='public'
    )
    op.create_index('ix_payment_request_created_at', 'payments_requests', ['created_at'], unique=False, schema='public')
    op.create_index('ix_payment_request_orderId', 'payments_requests', ['orderId'], unique=False, schema='public')
    op.create_index('ix_payment_request_status', 'payments_requests', ['status'], unique=False, schema='public')
    op.create_index('ix_payment_request_user_id', 'payments_requests', ['user_id'], unique=False, schema='public')
    op.create_table('purchased_documents',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount_sum', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['public.documents.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('tokens',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('refresh_token', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('user_activity',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('path', sa.String(length=1024), nullable=True),
    sa.Column('ip_address', sa.String(length=64), nullable=True),
    sa.Column('user_agent', sa.String(length=1024), nullable=True),
    sa.Column('extra', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('user_balance',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('balance', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('reserved_balance', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id'),
    schema='public'
    )
    op.create_index('ix_user_balance_user_id', 'user_balance', ['user_id'], unique=True, schema='public')
    op.create_table('user_group_association',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['public.groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ondelete='CASCADE')
    )
    op.create_table('chat_messages',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('chat_id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('sender_type', sa.Enum('USER', 'CLIENT', 'SUPPORT', 'LAWYER', 'SALESMAN', 'SYSTEM', name='sendertype'), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.Enum('SENT', 'EDITED', 'DELETED', name='messagestatus'), nullable=False),
    sa.Column('edited_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['public.chats.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['public.users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_chat_messages_chat_id_created_at', 'chat_messages', ['chat_id', sa.literal_column('created_at DESC')], unique=False)
    op.create_table('discount_association',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('agreement_id', sa.Integer(), nullable=False),
    sa.Column('discount_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), server_default='true', nullable=False),
    sa.ForeignKeyConstraint(['agreement_id'], ['public.agreements_clients.id'], ),
    sa.ForeignKeyConstraint(['discount_id'], ['public.discount.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_discount_association_active', 'discount_association', ['active'], unique=False)
    op.create_index('ix_discount_association_agreement_discount', 'discount_association', ['agreement_id', 'discount_id'], unique=False)
    op.create_index('ix_discount_association_agreement_id', 'discount_association', ['agreement_id'], unique=False)
    op.create_index('ix_discount_association_discount_id', 'discount_association', ['discount_id'], unique=False)
    op.create_table('chat_participant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chat_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('joined_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('left_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['public.chats.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('chat_rating',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chat_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['chat_id'], ['public.chats.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('chat_id'),
    schema='public'
    )
    op.create_table('payment_schedule',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('agreement_id', sa.Integer(), nullable=False),
    sa.Column('status', postgresql.ENUM('PAID', 'OVERDUE', 'EXPECTED', 'DEDUCTED', name='status_payment_enum'), nullable=False),
    sa.Column('deducted_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('date_payment_done', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['agreement_id'], ['public.agreements_clients.id'], ),
    sa.ForeignKeyConstraint(['deducted_id'], ['public.discount.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index('ix_payment_schedule_agreement_id', 'payment_schedule', ['agreement_id'], unique=False, schema='public')
    op.create_index('ix_payment_schedule_agreement_status', 'payment_schedule', ['agreement_id', 'status'], unique=False, schema='public')
    op.create_index('ix_payment_schedule_date', 'payment_schedule', ['date'], unique=False, schema='public')
    op.create_index('ix_payment_schedule_deducted_id', 'payment_schedule', ['deducted_id'], unique=False, schema='public')
    op.create_index('ix_payment_schedule_status', 'payment_schedule', ['status'], unique=False, schema='public')
    op.create_table('support_history_chat',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chat_id', sa.Integer(), nullable=False),
    sa.Column('old_support_id', sa.Integer(), nullable=False),
    sa.Column('reason_id', sa.Integer(), nullable=True),
    sa.Column('history_date_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['public.chats.id'], ),
    sa.ForeignKeyConstraint(['history_date_id'], ['public.support_history_date.id'], ),
    sa.ForeignKeyConstraint(['old_support_id'], ['public.users.id'], ),
    sa.ForeignKeyConstraint(['reason_id'], ['public.reason_close_chat.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('chat_attachment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=1024), nullable=False),
    sa.Column('content_type', sa.String(length=128), nullable=True),
    sa.Column('size', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['chat_messages.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('history_edit_schedule',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('schedule_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('status', postgresql.ENUM('PAID', 'OVERDUE', 'EXPECTED', 'DEDUCTED', name='status_payment_enum'), nullable=False),
    sa.Column('date_edit', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['schedule_id'], ['public.payment_schedule.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index('ix_history_edit_schedule_date', 'history_edit_schedule', ['date'], unique=False, schema='public')
    op.create_index('ix_history_edit_schedule_schedule_id', 'history_edit_schedule', ['schedule_id'], unique=False, schema='public')
    op.create_index('ix_history_edit_schedule_status', 'history_edit_schedule', ['status'], unique=False, schema='public')
    op.create_table('message_read_receipt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('read_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['chat_messages.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('message_read_receipt', schema='public')
    op.drop_index('ix_history_edit_schedule_status', table_name='history_edit_schedule', schema='public')
    op.drop_index('ix_history_edit_schedule_schedule_id', table_name='history_edit_schedule', schema='public')
    op.drop_index('ix_history_edit_schedule_date', table_name='history_edit_schedule', schema='public')
    op.drop_table('history_edit_schedule', schema='public')
    op.drop_table('chat_attachment', schema='public')
    op.drop_table('support_history_chat', schema='public')
    op.drop_index('ix_payment_schedule_status', table_name='payment_schedule', schema='public')
    op.drop_index('ix_payment_schedule_deducted_id', table_name='payment_schedule', schema='public')
    op.drop_index('ix_payment_schedule_date', table_name='payment_schedule', schema='public')
    op.drop_index('ix_payment_schedule_agreement_status', table_name='payment_schedule', schema='public')
    op.drop_index('ix_payment_schedule_agreement_id', table_name='payment_schedule', schema='public')
    op.drop_table('payment_schedule', schema='public')
    op.drop_table('chat_rating', schema='public')
    op.drop_table('chat_participant', schema='public')
    op.drop_index('ix_discount_association_discount_id', table_name='discount_association')
    op.drop_index('ix_discount_association_agreement_id', table_name='discount_association')
    op.drop_index('ix_discount_association_agreement_discount', table_name='discount_association')
    op.drop_index('ix_discount_association_active', table_name='discount_association')
    op.drop_table('discount_association')
    op.drop_index('ix_chat_messages_chat_id_created_at', table_name='chat_messages')
    op.drop_table('chat_messages')
    op.drop_table('user_group_association')
    op.drop_index('ix_user_balance_user_id', table_name='user_balance', schema='public')
    op.drop_table('user_balance', schema='public')
    op.drop_table('user_activity', schema='public')
    op.drop_table('tokens', schema='public')
    op.drop_table('purchased_documents', schema='public')
    op.drop_index('ix_payment_request_user_id', table_name='payments_requests', schema='public')
    op.drop_index('ix_payment_request_status', table_name='payments_requests', schema='public')
    op.drop_index('ix_payment_request_orderId', table_name='payments_requests', schema='public')
    op.drop_index('ix_payment_request_created_at', table_name='payments_requests', schema='public')
    op.drop_table('payments_requests', schema='public')
    op.drop_table('documents_user', schema='public')
    op.drop_table('document_fields', schema='public')
    op.drop_table('document_created', schema='public')
    op.drop_table('court_stage', schema='public')
    op.drop_table('client_lawyer_assignment', schema='public')
    op.drop_table('chats', schema='public')
    op.drop_index('ix_balance_operation_user_id_created_at', table_name='balance_operation', schema='public')
    op.drop_index('ix_balance_operation_external_id', table_name='balance_operation', schema='public')
    op.drop_table('balance_operation', schema='public')
    op.drop_index('ix_agreements_clients_user_id', table_name='agreements_clients', schema='public')
    op.drop_index('ix_agreements_clients_date_conclusion', table_name='agreements_clients', schema='public')
    op.drop_table('agreements_clients', schema='public')
    op.drop_table('group_permission_association')
    op.drop_table('users', schema='public')
    op.drop_table('support_history_date', schema='public')
    op.drop_table('reason_close_chat', schema='public')
    op.drop_table('operation_type', schema='public')
    op.drop_table('notifications', schema='public')
    op.drop_table('groups', schema='public')
    op.drop_table('documents', schema='public')
    op.drop_index('ix_discount_type', table_name='discount', schema='public')
    op.drop_index('ix_discount_date_create', table_name='discount', schema='public')
    op.drop_table('discount', schema='public')

    # enum
    op.execute("DROP TYPE IF EXISTS type_upd_schedule_enum")
    op.execute("DROP TYPE IF EXISTS transaction_status_enum")
    op.execute("DROP TYPE IF EXISTS transaction_direction_enum")
    op.execute("DROP TYPE IF EXISTS field_type_enum")
    op.execute("DROP TYPE IF EXISTS status_payment_enum")
    op.execute("DROP TYPE IF EXISTS sender_type_enum")
    op.execute("DROP TYPE IF EXISTS message_status_enum")
    # ### end Alembic commands ###
